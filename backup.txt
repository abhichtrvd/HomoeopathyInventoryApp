manifest.json

{
    "manifest_version": 3,
    "name": "Homeopathic Medicine Manager",
    "version": "1.0",
    "description": "Manage and search homeopathic medicines.",
    "action": {
      "default_popup": "popup.html"
    },
    "permissions": ["storage", "tabs", "background", "windows"],
    "background": {
      "service_worker": "background.js"
    },
    "icons": {
      "16": "icon16.png",
      "48": "icon48.png",
      "128": "icon128.png"
    }
  }
  

  background.js

  chrome.runtime.onInstalled.addListener(function () {
    chrome.storage.local.set({ medicines: [] });
});
chrome.action.onClicked.addListener(function() {
    chrome.windows.create({
        url: chrome.runtime.getURL("popup.html"),
        type: "popup",
        active: true
        // width: 1200,
        // height: 1200
    });
});


popup.html


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Homeopathic Medicine Manager</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h2>Homeopathic Medicine Manager</h2>

    <!-- Tab navigation -->
    <div class="tab">
        <button class="tablinks" id="tab-add">Add Medicine</button>
        <button class="tablinks" id="tab-search">Search Medicine</button>
    </div>

    <!-- Add Medicine Tab -->
    <div id="add" class="tabcontent">
        <form id="medicine-form">
            <label for="medicine-name">Medicine Name:</label>
            <input type="text" id="medicine-name" required>
            <br>

            <label for="potency">Potency:</label>
            <input type="text" id="potency" required>
            <br>

            <label for="location">Location:</label>
            <input type="text" id="location" required>
            <br>

            <label for="quantity">Quantity:</label>
            <input type="number" id="quantity" required>
            <br>

            <button type="submit">Add Medicine</button>
        </form>
    </div>

    <!-- Search Medicine Tab -->
    <div id="search" class="tabcontent">
        <h3>Search for Medicine</h3>
        <input type="text" id="search-name" placeholder="Enter medicine name">
        <input type="text" id="search-potency" placeholder="Enter potency">

        <h3>Medicine Details</h3>
        <table id="result-table" border="1">
            <thead>
                <tr>
                    <th>Medicine Name</th>
                    <th>Potency</th>
                    <th>Location</th>
                    <th>Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="medicine-list">
            </tbody>
        </table>
    </div>

    <script src="popup.js"></script>
</body>
</html>


popup.js

document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('medicine-form');
    const searchNameInput = document.getElementById('search-name');
    const searchPotencyInput = document.getElementById('search-potency');
    const medicineList = document.getElementById('medicine-list');

    // Store data on form submission
    form.addEventListener('submit', function (event) {
        event.preventDefault();

        const medicineName = document.getElementById('medicine-name').value;
        const potency = document.getElementById('potency').value;
        const location = document.getElementById('location').value;
        const quantity = parseInt(document.getElementById('quantity').value, 10);

        const medicineData = { medicineName, potency, location, quantity };

        // Get existing medicines from storage and add the new one
        chrome.storage.local.get({ medicines: [] }, function (result) {
            const medicines = result.medicines;
            medicines.push(medicineData);

            chrome.storage.local.set({ medicines }, function () {
                alert('Medicine added successfully!');
                form.reset();
                searchMedicines(searchNameInput.value, searchPotencyInput.value); // Refresh table
            });
        });
    });

    // Listen for search input changes on both fields
    searchNameInput.addEventListener('input', function () {
        searchMedicines(this.value, searchPotencyInput.value);
    });

    searchPotencyInput.addEventListener('input', function () {
        searchMedicines(searchNameInput.value, this.value);
    });

    // Function to search and display matching medicines
    function searchMedicines(nameQuery, potencyQuery) {
        const lowerNameQuery = nameQuery.toLowerCase();
        const lowerPotencyQuery = potencyQuery.toLowerCase();
        medicineList.innerHTML = ''; // Clear the table

        chrome.storage.local.get({ medicines: [] }, function (result) {
            const medicines = result.medicines;

            medicines.forEach(function (medicine, index) {
                const matchesName = medicine.medicineName.toLowerCase().includes(lowerNameQuery);
                const matchesPotency = medicine.potency.toLowerCase().includes(lowerPotencyQuery);

                // If both name and potency match, or if one of the fields is empty (search for all)
                if ((matchesName || lowerNameQuery === '') && (matchesPotency || lowerPotencyQuery === '')) {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${medicine.medicineName}</td>
                        <td>${medicine.potency}</td>
                        <td>${medicine.location}</td>
                        <td id="quantity-${index}">${medicine.quantity}</td>
                        <td>
                            <div class="quantity-controls">
                                <button class="decrease" data-index="${index}">-</button>
                                <button class="increase" data-index="${index}">+</button>
                            </div>
                        </td>
                    `;
                    medicineList.appendChild(row);
                }
            });

            // Attach event listeners to the newly created buttons
            document.querySelectorAll('.increase').forEach(button => {
                button.addEventListener('click', function () {
                    const index = parseInt(this.getAttribute('data-index'), 10);
                    updateQuantity(index, 1);
                });
            });

            document.querySelectorAll('.decrease').forEach(button => {
                button.addEventListener('click', function () {
                    const index = parseInt(this.getAttribute('data-index'), 10);
                    updateQuantity(index, -1);
                });
            });
        });
    }

    // Function to update the quantity of a medicine
    function updateQuantity(index, change) {
        chrome.storage.local.get({ medicines: [] }, function (result) {
            const medicines = result.medicines;
            if (medicines[index]) {
                medicines[index].quantity = Math.max(0, medicines[index].quantity + change);
                chrome.storage.local.set({ medicines }, function () {
                    searchMedicines(searchNameInput.value, searchPotencyInput.value); // Refresh table
                });
            }
        });
    }

    // Tab functionality
    function openTab(tabName) {
        const tabcontent = document.getElementsByClassName('tabcontent');
        for (let i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = 'none';
        }

        const tablinks = document.getElementsByClassName('tablinks');
        for (let i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(' active', '');
        }

        document.getElementById(tabName).style.display = 'block';
        const activeTab = document.querySelector(`.tablinks[id='tab-${tabName}']`);
        if (activeTab) {
            activeTab.className += ' active';
        }
    }

    // Set default tab (Add Medicine)
    document.getElementById('tab-add').addEventListener('click', function() {
        openTab('add');
    });

    document.getElementById('tab-search').addEventListener('click', function() {
        openTab('search');
    });

    document.getElementById('tab-add').click();
});


style.css

body {
    font-family: Arial, sans-serif;
    padding: 20px;
    margin: 2vw;
    margin-right:20px;
    width: 90vw; /* Full viewport width */
    height: 100vh; /* Full viewport height */
    box-sizing: border-box;
}

/* Style for tab navigation */
.tab {
    overflow: hidden;
    background-color: #f1f1f1;
    margin-bottom: 20px;
}

.tab button {
    background-color: #f1f1f1;
    border: none;
    outline: none;
    cursor: pointer;
    padding: 14px 16px;
    transition: 0.3s;
}

.tab button:hover {
    background-color: #ddd;
}

.tab button.active {
    background-color: #ccc;
}

/* Style for tab content */
.tabcontent {
    display: none;
    padding: 20px;
    border: 1px solid #ddd;
    border-top: none;
    background-color: #fff;
}

/* Style for the quantity control buttons */
.quantity-controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100px;
    margin: auto;
}

.quantity-controls button {
    width: 40px;
    height: 30px;
    font-size: 18px;
}




